Day 22 of 30 🗓️

Problem : First Element to Repeat k Times
You are given an array of integers and an integer k. Your task is to find the first element in the array that appears exactly k times. If no such element exists, return -1.

Input :

An integer array arr of size n, where 1≤n≤105

An integer k, where 1≤k≤n

Input: arr = [3, 1, 4, 4, 5, 2, 6, 1, 4], k = 2


Output :
Return the first element from the array that occurs exactly k times. If no element occurs exactly k times, return -1.
Output: 1


#include <stdio.h>

struct Pair {
    int value;
    int count;
};

int firstElementKTimes(int arr[], int n, int k) {
    struct Pair freq[100000];  // array to store value and its count
    int size = 0;

    // Count frequencies
    for (int i = 0; i < n; i++) {
        int found = 0;
        for (int j = 0; j < size; j++) {
            if (freq[j].value == arr[i]) {
                freq[j].count++;
                found = 1;
                break;
            }
        }
        if (!found) {
            freq[size].value = arr[i];
            freq[size].count = 1;
            size++;
        }
    }

    // Find first element that occurs exactly k times
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < size; j++) {
            if (freq[j].value == arr[i] && freq[j].count == k) {
                return arr[i];
            }
        }
    }
    return -1;
}

int main() {
    int arr[] = {3, 1, 4, 4, 5, 2, 6, 1, 4};
    int n = sizeof(arr) / sizeof(arr[0]);
    int k = 2;

    int ans = firstElementKTimes(arr, n, k);
    printf("%d\n", ans);

    return 0;
}
